<?php

/**
 * This is the model base class for the table "{{answer}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Answer".
 *
 * Columns in table "{{answer}}" available as properties of the model,
 * followed by relations of table "{{answer}}" available as properties of the model.
 *
 * @property string $id
 * @property string $learner_id
 * @property string $description
 * @property string $ask_id
 * @property integer $is_best
 * @property string $useful
 * @property string $useless
 * @property string $create_at
 * @property string $update_at
 *
 * @property Ask $ask
 * @property User $learner
 */
abstract class BaseAnswer extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{answer}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Answer|Answers', $n);
	}

	public static function representingColumn() {
		return 'description';
	}

	public function rules() {
		return array(
			array('description, ask_id', 'required'),
			array('is_best', 'numerical', 'integerOnly'=>true),
			array('learner_id, ask_id, useful, useless', 'length', 'max'=>10),
			array('update_at', 'safe'),
			array('is_best, useful, useless, update_at', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, learner_id, description, ask_id, is_best, useful, useless, create_at, update_at', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'ask' => array(self::BELONGS_TO, 'Ask', 'ask_id'),
			'learner' => array(self::BELONGS_TO, 'User', 'learner_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'learner_id' => null,
			'description' => Yii::t('app', 'Description'),
			'ask_id' => null,
			'is_best' => Yii::t('app', 'Is Best'),
			'useful' => Yii::t('app', 'Useful'),
			'useless' => Yii::t('app', 'Useless'),
			'create_at' => Yii::t('app', 'Create At'),
			'update_at' => Yii::t('app', 'Update At'),
			'ask' => null,
			'learner' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('learner_id', $this->learner_id);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('ask_id', $this->ask_id);
		$criteria->compare('is_best', $this->is_best);
		$criteria->compare('useful', $this->useful, true);
		$criteria->compare('useless', $this->useless, true);
		$criteria->compare('create_at', $this->create_at, true);
		$criteria->compare('update_at', $this->update_at, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}