<?php

/**
 * This is the model base class for the table "{{learner_concept}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "LearnerConcept".
 *
 * Columns in table "{{learner_concept}}" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $learner_id
 * @property string $concept_id
 * @property string $create_at
 * @property string $lastaction_at
 * @property string $learnt_at
 * @property integer $status
 *
 */
abstract class BaseLearnerConcept extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{learner_concept}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'LearnerConcept|LearnerConcepts', $n);
	}

	public static function representingColumn() {
		return array(
			'learner_id',
			'concept_id',
		);
	}

	public function rules() {
		return array(
			array('learner_id, concept_id, create_at', 'required'),
			array('status', 'numerical', 'integerOnly'=>true),
			array('learner_id, concept_id', 'length', 'max'=>10),
			array('lastaction_at, learnt_at', 'safe'),
			array('lastaction_at, learnt_at, status', 'default', 'setOnEmpty' => true, 'value' => null),
			array('learner_id, concept_id, create_at, lastaction_at, learnt_at, status', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'learner_id' => null,
			'concept_id' => null,
			'create_at' => Yii::t('app', 'Create At'),
			'lastaction_at' => Yii::t('app', 'Lastaction At'),
			'learnt_at' => Yii::t('app', 'Learnt At'),
			'status' => Yii::t('app', 'Status'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('learner_id', $this->learner_id);
		$criteria->compare('concept_id', $this->concept_id);
		$criteria->compare('create_at', $this->create_at, true);
		$criteria->compare('lastaction_at', $this->lastaction_at, true);
		$criteria->compare('learnt_at', $this->learnt_at, true);
		$criteria->compare('status', $this->status);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}