<?php

/**
 * This is the model base class for the table "{{message}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Message".
 *
 * Columns in table "{{message}}" available as properties of the model,
 * followed by relations of table "{{message}}" available as properties of the model.
 *
 * @property string $id
 * @property string $user_id
 * @property string $to_user_id
 * @property string $to_message_id
 * @property string $description
 * @property integer $status
 * @property string $create_at
 *
 * @property User $user
 * @property Message $toMessage
 * @property Message[] $messages
 * @property User $toUser
 */
abstract class BaseMessage extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{message}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Message|Messages', $n);
	}

	public static function representingColumn() {
		return 'description';
	}

	public function rules() {
		return array(
			array('to_user_id, description', 'required'),
			array('status', 'numerical', 'integerOnly'=>true),
			array('user_id, to_user_id, to_message_id', 'length', 'max'=>10),
			array('to_message_id, status', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, user_id, to_user_id, to_message_id, description, status, create_at', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'user' => array(self::BELONGS_TO, 'User', 'user_id'),
			'toMessage' => array(self::BELONGS_TO, 'Message', 'to_message_id'),
			'messages' => array(self::HAS_MANY, 'Message', 'to_message_id'),
			'toUser' => array(self::BELONGS_TO, 'User', 'to_user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'user_id' => Yii::t('app', 'From'),
			'to_user_id' => Yii::t('app', 'To'),
			'to_message_id' => Yii::t('app', 'First Message'),
			'description' => Yii::t('app', 'Description'),
			'status' => Yii::t('app', 'Status'),
			'create_at' => Yii::t('app', 'Create At'),
			'user' => null,
			'toMessage' => null,
			'messages' => null,
			'toUser' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('to_user_id', $this->to_user_id);
		$criteria->compare('to_message_id', $this->to_message_id);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('status', $this->status);
		$criteria->compare('create_at', $this->create_at, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}