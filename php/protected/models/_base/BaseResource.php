<?php

/**
 * This is the model base class for the table "{{resource}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Resource".
 *
 * Columns in table "{{resource}}" available as properties of the model,
 * followed by relations of table "{{resource}}" available as properties of the model.
 *
 * @property string $id
 * @property string $author_id
 * @property string $title
 * @property string $description
 * @property integer $type
 * @property string $url
 * @property string $create_at
 * @property string $update_at
 *
 * @property mixed $concepts
 * @property User $author
 */
abstract class BaseResource extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{resource}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Resource|Resources', $n);
	}

	public static function representingColumn() {
		return 'title';
	}

	public function rules() {
		return array(
			array('title, type, url', 'required'),
			array('type', 'numerical', 'integerOnly'=>true),
			array('author_id', 'length', 'max'=>10),
			array('title', 'length', 'max'=>256),
			array('url', 'length', 'max'=>512),
			array('description, update_at', 'safe'),
			array('description, url, update_at', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, author_id, title, description, type, url, create_at, update_at', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'concepts' => array(self::MANY_MANY, 'Concept', '{{concept_resource}}(resource_id, concept_id)'),
			'author' => array(self::BELONGS_TO, 'User', 'author_id'),
		);
	}

	public function pivotModels() {
		return array(
			'concepts' => 'ConceptResource',
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'author_id' => null,
			'title' => Yii::t('app', 'Title'),
			'description' => Yii::t('app', 'Description'),
			'type' => Yii::t('app', 'Type'),
			'url' => Yii::t('app', 'Url'),
			'create_at' => Yii::t('app', 'Create At'),
			'update_at' => Yii::t('app', 'Update At'),
			'concepts' => null,
			'author' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('author_id', $this->author_id);
		$criteria->compare('title', $this->title, true);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('type', $this->type);
		$criteria->compare('url', $this->url, true);
		$criteria->compare('create_at', $this->create_at, true);
		$criteria->compare('update_at', $this->update_at, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}